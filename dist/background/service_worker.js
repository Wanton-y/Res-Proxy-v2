let e=[];const t={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"text/json",xml:"text/xml",jpg:"image/jpeg",gif:"image/gif",png:"image/png",webp:"image/webp"};function n(e){chrome.browserAction.setBadgeText({text:e.toString()})}function r(e){const n=e.split("."),r=n[n.length-1],s=new XMLHttpRequest;s.open("get",e,!1),s.send(null);let l=s.responseText||s.responseXML;return!!l&&(l=encodeURIComponent("js"===r?l.replace(/[\u0080-\uffff]/g,(function(e){const t=e.charCodeAt(0).toString(16);return"\\u"+"00000".substr(0,4-t.length)+t})):l),"data:"+(t[r]||t.txt)+";charset=utf-8,"+l)}function s(e){if(!e||0===e.length)return n(0),[];const t=e.map((e=>e.resources)).flat();return n(t.filter((e=>e.enable)).length),t}chrome.webRequest.onBeforeRequest.addListener((function(t){let n=t.url;for(let s=0,l=e.length;s<l;s++){const t=new RegExp(e[s].matchUrl,"gi");if(e[s].enable&&"string"==typeof e[s].replaceUrl&&t.test(n))if(/^file:\/\//.test(e[s].replaceUrl))do{n=r(n.replace(t,e[s].replaceUrl))}while(t.test(n));else do{n=n.replace(t,e[s].replaceUrl)}while(t.test(n))}return n===t.url?{}:{redirectUrl:n}}),{urls:["<all_urls>"]},["blocking"]),chrome.storage.local.get(["ResMap"],(function(t){const n=t.ResMap?JSON.parse(t.ResMap):[];e=s(n)})),chrome.storage.onChanged.addListener(((t,n)=>{if("local"===n||"sync"===n)for(const r in t)if("ResMap"===r){const n=t[r].newValue||"";e=s(JSON.parse(n)||[])}}));
